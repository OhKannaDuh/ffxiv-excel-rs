/// This file is auto-generated. Do not edit manually.

use crate::prelude::*;

#[derive(Debug, Clone)]
pub struct ENpcBase {
    pub row_id: u32,
    pub event_handler: u16,
    pub important: bool,
    pub scale: f32,
    pub model_chara_id: u32,
    pub model_chara: RowRef<ModelChara>,
    pub race_id: u32,
    pub race: RowRef<Race>,
    pub gender: u8,
    pub body_type: u8,
    pub height: u8,
    pub tribe_id: u32,
    pub tribe: RowRef<Tribe>,
    pub face: u8,
    pub hair_style: u8,
    pub hair_highlight: u8,
    pub skin_color: u8,
    pub eye_heterochromia: u8,
    pub hair_color: u8,
    pub hair_highlight_color: u8,
    pub facial_feature: u8,
    pub facial_feature_color: u8,
    pub eyebrows: u8,
    pub eye_color: u8,
    pub eye_shape: u8,
    pub nose: u8,
    pub jaw: u8,
    pub mouth: u8,
    pub lip_color: u8,
    pub bust_or_tone1: u8,
    pub extra_feature1: u8,
    pub extra_feature2_or_bust: u8,
    pub face_paint: u8,
    pub face_paint_color: u8,
    pub npc_equip_id: u32,
    pub npc_equip: RowRef<NpcEquip>,
    pub behavior_id: u32,
    pub behavior: RowRef<Behavior>,
    pub model_main_hand: u64,
    pub dye_main_hand_id: u32,
    pub dye_main_hand: RowRef<Stain>,
    pub dye2_main_hand_id: u32,
    pub dye2_main_hand: RowRef<Stain>,
    pub model_off_hand: u64,
    pub dye_off_hand_id: u32,
    pub dye_off_hand: RowRef<Stain>,
    pub dye2_off_hand_id: u32,
    pub dye2_off_hand: RowRef<Stain>,
    pub model_head: u32,
    pub dye_head_id: u32,
    pub dye_head: RowRef<Stain>,
    pub dye2_head_id: u32,
    pub dye2_head: RowRef<Stain>,
    pub visor: bool,
    pub model_body: bool,
    pub dye_body_id: u32,
    pub dye_body: RowRef<Stain>,
    pub dye2_body_id: u32,
    pub dye2_body: RowRef<Stain>,
    pub model_hands: u8,
    pub dye_hands_id: u32,
    pub dye_hands: RowRef<Stain>,
    pub dye2_hands_id: u32,
    pub dye2_hands: RowRef<Stain>,
    pub model_legs: u8,
    pub dye_legs_id: u32,
    pub dye_legs: RowRef<Stain>,
    pub dye2_legs_id: u32,
    pub dye2_legs: RowRef<Stain>,
    pub model_feet: u8,
    pub dye_feet_id: u32,
    pub dye_feet: RowRef<Stain>,
    pub dye2_feet_id: u32,
    pub dye2_feet: RowRef<Stain>,
    pub model_ears: u8,
    pub dye_ears_id: u32,
    pub dye_ears: RowRef<Stain>,
    pub dye2_ears_id: u32,
    pub dye2_ears: RowRef<Stain>,
    pub model_neck: u8,
    pub dye_neck_id: u32,
    pub dye_neck: RowRef<Stain>,
    pub dye2_neck_id: u32,
    pub dye2_neck: RowRef<Stain>,
    pub model_wrists: u8,
    pub dye_wrists_id: u32,
    pub dye_wrists: RowRef<Stain>,
    pub dye2_wrists_id: u32,
    pub dye2_wrists: RowRef<Stain>,
    pub model_left_ring: u8,
    pub dye_left_ring_id: u32,
    pub dye_left_ring: RowRef<Stain>,
    pub dye2_left_ring_id: u32,
    pub dye2_left_ring: RowRef<Stain>,
    pub model_right_ring: u8,
    pub dye_right_ring_id: u32,
    pub dye_right_ring: RowRef<Stain>,
    pub dye2_right_ring_id: u32,
    pub dye2_right_ring: RowRef<Stain>,
    pub invisibility: u16,
    pub balloon_id: u32,
    pub balloon: RowRef<Balloon>,
    pub not_rewrite_height: u16,
    pub default_balloon: bool,
}

impl Sheet for ENpcBase {
    const SHEET_NAME: &'static str = "ENpcBase";
}

impl FromExcelRow for ENpcBase {
    fn from_row(row: &ExcelRow) -> Option<Self> {
        let single_row = match &row.kind {
            ExcelRowKind::SingleRow(s) => s,
            _ => return None,
        };

        Some(Self {
            row_id: row.row_id,
            event_handler: single_row.columns.get(0).to_u16(),
            important: single_row.columns.get(1).to_bit(0),
            scale: single_row.columns.get(34).to_f32(),
            model_chara_id: single_row.columns.get(35).to_u32(),
            model_chara: RowRef::<ModelChara>::from(single_row.columns.get(35).to_u32()),
            race_id: single_row.columns.get(36).to_u32(),
            race: RowRef::<Race>::from(single_row.columns.get(36).to_u32()),
            gender: single_row.columns.get(37).to_u8(),
            body_type: single_row.columns.get(38).to_u8(),
            height: single_row.columns.get(39).to_u8(),
            tribe_id: single_row.columns.get(40).to_u32(),
            tribe: RowRef::<Tribe>::from(single_row.columns.get(40).to_u32()),
            face: single_row.columns.get(41).to_u8(),
            hair_style: single_row.columns.get(42).to_u8(),
            hair_highlight: single_row.columns.get(43).to_u8(),
            skin_color: single_row.columns.get(44).to_u8(),
            eye_heterochromia: single_row.columns.get(45).to_u8(),
            hair_color: single_row.columns.get(46).to_u8(),
            hair_highlight_color: single_row.columns.get(47).to_u8(),
            facial_feature: single_row.columns.get(48).to_u8(),
            facial_feature_color: single_row.columns.get(49).to_u8(),
            eyebrows: single_row.columns.get(50).to_u8(),
            eye_color: single_row.columns.get(51).to_u8(),
            eye_shape: single_row.columns.get(52).to_u8(),
            nose: single_row.columns.get(53).to_u8(),
            jaw: single_row.columns.get(54).to_u8(),
            mouth: single_row.columns.get(55).to_u8(),
            lip_color: single_row.columns.get(56).to_u8(),
            bust_or_tone1: single_row.columns.get(57).to_u8(),
            extra_feature1: single_row.columns.get(58).to_u8(),
            extra_feature2_or_bust: single_row.columns.get(59).to_u8(),
            face_paint: single_row.columns.get(60).to_u8(),
            face_paint_color: single_row.columns.get(61).to_u8(),
            npc_equip_id: single_row.columns.get(63).to_u32(),
            npc_equip: RowRef::<NpcEquip>::from(single_row.columns.get(63).to_u32()),
            behavior_id: single_row.columns.get(64).to_u32(),
            behavior: RowRef::<Behavior>::from(single_row.columns.get(64).to_u32()),
            model_main_hand: single_row.columns.get(65).to_u64(),
            dye_main_hand_id: single_row.columns.get(66).to_u32(),
            dye_main_hand: RowRef::<Stain>::from(single_row.columns.get(66).to_u32()),
            dye2_main_hand_id: single_row.columns.get(67).to_u32(),
            dye2_main_hand: RowRef::<Stain>::from(single_row.columns.get(67).to_u32()),
            model_off_hand: single_row.columns.get(68).to_u64(),
            dye_off_hand_id: single_row.columns.get(69).to_u32(),
            dye_off_hand: RowRef::<Stain>::from(single_row.columns.get(69).to_u32()),
            dye2_off_hand_id: single_row.columns.get(70).to_u32(),
            dye2_off_hand: RowRef::<Stain>::from(single_row.columns.get(70).to_u32()),
            model_head: single_row.columns.get(71).to_u32(),
            dye_head_id: single_row.columns.get(72).to_u32(),
            dye_head: RowRef::<Stain>::from(single_row.columns.get(72).to_u32()),
            dye2_head_id: single_row.columns.get(73).to_u32(),
            dye2_head: RowRef::<Stain>::from(single_row.columns.get(73).to_u32()),
            visor: single_row.columns.get(74).to_bit(1),
            model_body: single_row.columns.get(75).to_bit(2),
            dye_body_id: single_row.columns.get(76).to_u32(),
            dye_body: RowRef::<Stain>::from(single_row.columns.get(76).to_u32()),
            dye2_body_id: single_row.columns.get(77).to_u32(),
            dye2_body: RowRef::<Stain>::from(single_row.columns.get(77).to_u32()),
            model_hands: single_row.columns.get(78).to_u8(),
            dye_hands_id: single_row.columns.get(79).to_u32(),
            dye_hands: RowRef::<Stain>::from(single_row.columns.get(79).to_u32()),
            dye2_hands_id: single_row.columns.get(80).to_u32(),
            dye2_hands: RowRef::<Stain>::from(single_row.columns.get(80).to_u32()),
            model_legs: single_row.columns.get(81).to_u8(),
            dye_legs_id: single_row.columns.get(82).to_u32(),
            dye_legs: RowRef::<Stain>::from(single_row.columns.get(82).to_u32()),
            dye2_legs_id: single_row.columns.get(83).to_u32(),
            dye2_legs: RowRef::<Stain>::from(single_row.columns.get(83).to_u32()),
            model_feet: single_row.columns.get(84).to_u8(),
            dye_feet_id: single_row.columns.get(85).to_u32(),
            dye_feet: RowRef::<Stain>::from(single_row.columns.get(85).to_u32()),
            dye2_feet_id: single_row.columns.get(86).to_u32(),
            dye2_feet: RowRef::<Stain>::from(single_row.columns.get(86).to_u32()),
            model_ears: single_row.columns.get(87).to_u8(),
            dye_ears_id: single_row.columns.get(88).to_u32(),
            dye_ears: RowRef::<Stain>::from(single_row.columns.get(88).to_u32()),
            dye2_ears_id: single_row.columns.get(89).to_u32(),
            dye2_ears: RowRef::<Stain>::from(single_row.columns.get(89).to_u32()),
            model_neck: single_row.columns.get(90).to_u8(),
            dye_neck_id: single_row.columns.get(91).to_u32(),
            dye_neck: RowRef::<Stain>::from(single_row.columns.get(91).to_u32()),
            dye2_neck_id: single_row.columns.get(92).to_u32(),
            dye2_neck: RowRef::<Stain>::from(single_row.columns.get(92).to_u32()),
            model_wrists: single_row.columns.get(93).to_u8(),
            dye_wrists_id: single_row.columns.get(94).to_u32(),
            dye_wrists: RowRef::<Stain>::from(single_row.columns.get(94).to_u32()),
            dye2_wrists_id: single_row.columns.get(95).to_u32(),
            dye2_wrists: RowRef::<Stain>::from(single_row.columns.get(95).to_u32()),
            model_left_ring: single_row.columns.get(96).to_u8(),
            dye_left_ring_id: single_row.columns.get(97).to_u32(),
            dye_left_ring: RowRef::<Stain>::from(single_row.columns.get(97).to_u32()),
            dye2_left_ring_id: single_row.columns.get(98).to_u32(),
            dye2_left_ring: RowRef::<Stain>::from(single_row.columns.get(98).to_u32()),
            model_right_ring: single_row.columns.get(99).to_u8(),
            dye_right_ring_id: single_row.columns.get(100).to_u32(),
            dye_right_ring: RowRef::<Stain>::from(single_row.columns.get(100).to_u32()),
            dye2_right_ring_id: single_row.columns.get(101).to_u32(),
            dye2_right_ring: RowRef::<Stain>::from(single_row.columns.get(101).to_u32()),
            invisibility: single_row.columns.get(104).to_u16(),
            balloon_id: single_row.columns.get(105).to_u32(),
            balloon: RowRef::<Balloon>::from(single_row.columns.get(105).to_u32()),
            not_rewrite_height: single_row.columns.get(106).to_u16(),
            default_balloon: single_row.columns.get(107).to_bit(3),
        })
    }
}

