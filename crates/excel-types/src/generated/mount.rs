/// This file is auto-generated. Do not edit manually.

use crate::prelude::*;

#[derive(Debug, Clone)]
pub struct Mount {
    pub row_id: u32,
    pub singular: String,
    pub adjective: i8,
    pub plural: String,
    pub possessive_pronoun: i8,
    pub starts_with_vowel: i8,
    pub pronoun: i8,
    pub article: i8,
    pub model_chara_id: u32,
    pub model_chara: RowRef<ModelChara>,
    pub move_control_id: u32,
    pub flying_condition_id: u32,
    pub flying_condition: RowRef<MountFlyingCondition>,
    pub is_flying: u8,
    pub mount_customize_id: u32,
    pub mount_customize: RowRef<MountCustomize>,
    pub ride_bgm_id: u32,
    pub ride_bgm: RowRef<BGM>,
    pub exit_move_dist: u8,
    pub exit_move_speed: u8,
    pub is_emote: bool,
    pub equip_head: i32,
    pub equip_body: i32,
    pub equip_leg: i32,
    pub equip_foot: i32,
    pub order: i16,
    pub icon_id: u32,
    pub ui_priority: u16,
    pub radius_rate: u8,
    pub base_motion_speed_run: bool,
    pub base_motion_speed_walk: u8,
    pub underwater_animation_speed: u8,
    pub extra_seats: u8,
    pub mount_action_id: u32,
    pub mount_action: RowRef<MountAction>,
    pub is_airborne: bool,
    pub ex_hotbar_enable_config: bool,
    pub use_ep: bool,
    pub is_immobile: bool,
    pub hide_headgear: bool,
    pub tilt_ground_id: u32,
    pub tilt_ground: RowRef<TiltParam>,
    pub tilt_air_swim_id: u32,
    pub tilt_air_swim: RowRef<TiltParam>,
    pub tilt_param3_id: u32,
    pub tilt_param3: RowRef<TiltParam>,
    pub tilt_param4_id: u32,
    pub tilt_param4: RowRef<TiltParam>,
}

impl Sheet for Mount {
    const SHEET_NAME: &'static str = "Mount";
}

impl FromExcelRow for Mount {
    fn from_row(row: &ExcelRow) -> Option<Self> {
        let single_row = match &row.kind {
            ExcelRowKind::SingleRow(s) => s,
            _ => return None,
        };

        Some(Self {
            row_id: row.row_id,
            singular: single_row.columns.get(0).to_owned_string(),
            adjective: single_row.columns.get(1).to_i8(),
            plural: single_row.columns.get(2).to_owned_string(),
            possessive_pronoun: single_row.columns.get(3).to_i8(),
            starts_with_vowel: single_row.columns.get(4).to_i8(),
            pronoun: single_row.columns.get(6).to_i8(),
            article: single_row.columns.get(7).to_i8(),
            model_chara_id: single_row.columns.get(8).to_u32(),
            model_chara: RowRef::<ModelChara>::from(single_row.columns.get(8).to_u32()),
            move_control_id: single_row.columns.get(9).to_u32(),
            flying_condition_id: single_row.columns.get(10).to_u32(),
            flying_condition: RowRef::<MountFlyingCondition>::from(single_row.columns.get(10).to_u32()),
            is_flying: single_row.columns.get(14).to_u8(),
            mount_customize_id: single_row.columns.get(16).to_u32(),
            mount_customize: RowRef::<MountCustomize>::from(single_row.columns.get(16).to_u32()),
            ride_bgm_id: single_row.columns.get(17).to_u32(),
            ride_bgm: RowRef::<BGM>::from(single_row.columns.get(17).to_u32()),
            exit_move_dist: single_row.columns.get(21).to_u8(),
            exit_move_speed: single_row.columns.get(22).to_u8(),
            is_emote: single_row.columns.get(24).to_bit(1),
            equip_head: single_row.columns.get(25).to_i32(),
            equip_body: single_row.columns.get(26).to_i32(),
            equip_leg: single_row.columns.get(27).to_i32(),
            equip_foot: single_row.columns.get(28).to_i32(),
            order: single_row.columns.get(29).to_i16(),
            icon_id: single_row.columns.get(30).to_u32(),
            ui_priority: single_row.columns.get(31).to_u16(),
            radius_rate: single_row.columns.get(32).to_u8(),
            base_motion_speed_run: single_row.columns.get(33).to_bit(2),
            base_motion_speed_walk: single_row.columns.get(34).to_u8(),
            underwater_animation_speed: single_row.columns.get(36).to_u8(),
            extra_seats: single_row.columns.get(37).to_u8(),
            mount_action_id: single_row.columns.get(38).to_u32(),
            mount_action: RowRef::<MountAction>::from(single_row.columns.get(38).to_u32()),
            is_airborne: single_row.columns.get(39).to_bit(3),
            ex_hotbar_enable_config: single_row.columns.get(40).to_bit(4),
            use_ep: single_row.columns.get(41).to_bit(5),
            is_immobile: single_row.columns.get(43).to_bit(7),
            hide_headgear: single_row.columns.get(47).to_bit(1),
            tilt_ground_id: single_row.columns.get(48).to_u32(),
            tilt_ground: RowRef::<TiltParam>::from(single_row.columns.get(48).to_u32()),
            tilt_air_swim_id: single_row.columns.get(49).to_u32(),
            tilt_air_swim: RowRef::<TiltParam>::from(single_row.columns.get(49).to_u32()),
            tilt_param3_id: single_row.columns.get(50).to_u32(),
            tilt_param3: RowRef::<TiltParam>::from(single_row.columns.get(50).to_u32()),
            tilt_param4_id: single_row.columns.get(52).to_u32(),
            tilt_param4: RowRef::<TiltParam>::from(single_row.columns.get(52).to_u32()),
        })
    }
}

